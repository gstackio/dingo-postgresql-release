#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/dpg-cli/helpers/ctl_setup.sh 'dpg-cli'

export PORT=${PORT:-5000}
export LANG=en_US.UTF-8

case $1 in

  start)
    pid_guard $PIDFILE $JOB_NAME

    # store pid in $PIDFILE
    echo $$ > $PIDFILE

    # setup /root/.dpg so dpg "just works"
    DPG_DIR=/root/.dpg
    BOSH_DPG_DIR=/root/.dpg/bosh
    mkdir -p ${DPG_DIR}
    if [[ ! -f ${DPG_DIR}/current ]]; then
      echo "bosh" > ${DPG_DIR}/current
    fi
    mkdir -p ${BOSH_DPG_DIR}

    <%
      servicebroker_machine = nil
      broker = link("servicebroker")
      servicebroker_machine = broker.instances.first.address

      servicebroker_port     = broker.p("port")
      servicebroker_username = broker.p("username")
      servicebroker_password = broker.p("password")
      cf_endpoint            = broker.p("cf.api_url")
      cf_username            = broker.p("cf.username")
      cf_password            = broker.p("cf.password")
      cf_skip_ssl_validation = broker.p("cf.skip_ssl_validation")

      servicebroker_machine ||= p("servicebroker.machines").first
    -%>
    echo "<%= servicebroker_machine %>:<%= servicebroker_port %>" > ${BOSH_DPG_DIR}/broker_endpoint
    echo "<%= servicebroker_username %>" > ${BOSH_DPG_DIR}/broker_username
    echo "<%= servicebroker_password %>" > ${BOSH_DPG_DIR}/broker_password

    <%
      etcd_machine = nil
      if_p("etcd.machines") do |machines|
        etcd_machine = machines.first
      end
      etcd_machine ||= link("etcd").instances.first.address
    -%>
    echo "<%= etcd_machine %>:4001" > ${BOSH_DPG_DIR}/etcd_endpoint

    echo "<%= cf_endpoint %>" > ${BOSH_DPG_DIR}/cf_endpoint
    echo "<%= cf_username %>" > ${BOSH_DPG_DIR}/cf_username
    echo "<%= cf_password %>" > ${BOSH_DPG_DIR}/cf_password
    <% if cf_skip_ssl_validation %>
    touch ${BOSH_DPG_DIR}/cf_skip_ssl_validation
    <% else %>
    rm -f ${BOSH_DPG_DIR}/cf_skip_ssl_validation
    <% end %>

    cp ${JOB_DIR}/bin/dpg_wrapper /usr/bin/dpg

    # do nothing forever
    exec tail -f /dev/null
    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;
  *)
    echo "Usage: dpg-cli_ctl {start|stop}"

    ;;

esac
exit 0
