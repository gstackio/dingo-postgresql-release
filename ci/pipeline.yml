---
groups:
- name: pipeline
  jobs: [rc, bosh-rc, testflight, testflight-bosh2, integration, integration-bosh2, deploy-vsphere, shipit, shipit-rc, minor, major, patch]
- name: patroni-images
  jobs: [build-pg95-base-image, build-pg95-image, docker-machine-setup, test-95-image]
- name: ci-image
  jobs: [build-task-image]

jobs:
- name: build-pg95-base-image
  public: true
  serial: true
  plan:
  - aggregate:
    - {get: boshrelease}
    - {get: boshrelease-pg95-base-image, trigger: true, params: {submodules: none}}
  - put: pg95-base-image-latest
    params:
      build: boshrelease/images/postgresql95-patroni-base

- name: build-pg95-image
  public: true
  serial: true
  plan:
  - aggregate:
    - {get: boshrelease-ci}
    - {get: dockerfile-repo, resource: boshrelease-pg95-image, trigger: true, params: {submodules: none}}
    - {get: patroni, resource: patroni, trigger: true}
    - {get: pg95-base-image-latest, passed: [build-pg95-base-image], trigger: true, params: {skip_download: true}}
  - task: prepare-dockerfile
    file: boshrelease-ci/ci/tasks/prepare-dockerfile.yml
    params:
      dockerfile_root: dockerfile-repo/images/postgresql95-patroni
  - put: pg95-image-pre-test
    params:
      build: dockerfile

- name: test-95-image
  serial_groups: [delmo]
  plan:
  - aggregate:
    - {get: boshrelease-ci}
    - {get: pg95-image-pre-test, passed: [build-pg95-image], trigger: true, params: {skip_download: true}}
  - task: run-delmo-test
    file: boshrelease-ci/ci/tasks/run-delmo-test.yml
    params:
      MACHINE_EXPORT_AWS_ACCESS_KEY_ID: {{docker-machine-access-key-id}}
      MACHINE_EXPORT_AWS_SECRET_ACCESS_KEY: {{docker-machine-secret-access-key}}
      MACHINE_EXPORT_AWS_REGION: {{docker-machine-region}}
      MACHINE_EXPORT_AWS_BUCKET: {{docker-machine-bucket}}
      WAL_S3_BUCKET: {{backups-testflight-backups-bucket}}
      AWS_REGION: {{delmo-test-wal-aws-region}}
      AWS_ACCESS_KEY_ID: {{dingotiles-aws-access}}
      AWS_SECRET_ACCESS_KEY: {{dingotiles-aws-secret}}
  - put: pg95-image-edge
    params:
      pull_repository: dingotiles/dingo-postgresql95
      pull_tag: pre-test

- name: rc
  public: true
  serial_groups: [version]
  plan:
  - aggregate:
    - {get: boshrelease}
    - {get: boshrelease-trigger, trigger: true, params: {skip_download: true}}
    - {get: version, params: {pre: rc}}
    - {get: pg95-image-edge, trigger: true, params: {skip_download: true}}
  - put: version
    params: {file: version/number}

- name: bosh-rc
  public: true
  plan:
  - aggregate:
    - {get: boshrelease-ci}
    - {get: boshrelease, passed: [rc], trigger: true}
    - {get: version, passed: [rc], trigger: true}
  - task: create-candidate-release
    file: boshrelease-ci/ci/tasks/create-candidate-release.yml
    params:
      aws_access_key_id: {{dingotiles-aws-access}}
      aws_secret_access_key: {{dingotiles-aws-secret}}
  - put: candidate-release
    params: {file: candidate-release/dingo-postgresql-*.tgz}

- name: testflight
  public: true
  serial_groups: [bosh-lite-testflight]
  plan:
  - aggregate:
    - {get: boshrelease-ci}
    - {get: boshrelease, passed: [bosh-rc], trigger: true}
    - {get: version, passed: [bosh-rc], trigger: true}
    - {get: candidate-release, passed: [bosh-rc], trigger: true}
    - {get: pg95-image-edge, params: {skip_download: true}}
    - {get: docker-image-registrator, trigger: true, params: {skip_download: true}}
    - {get: etcd}
    - {get: simple-remote-syslog}
    - {get: lite-stemcell}
  - task: director-creds
    file: boshrelease-ci/ci/tasks/director-creds.yml
    params:
      VAULT_ADDR: {{vault-addr}}
      VAULT_SKIP_VERIFY: 1
      VAULT_PREFIX: {{bosh-lite-testflight-vault-prefix}}
      GITHUB_TOKEN: {{github-release-access-token}}
  - task: create-lite-manifest
    file: boshrelease-ci/ci/tasks/create-manifest-bosh1.yml
    params:
      deployment_name: dingo-postgresql-testflight
      bosh_syslog_host: {{bosh-lite-syslog-host}}
      bosh_syslog_port: {{bosh-lite-syslog-port}}
      aws_access_key: {{dingotiles-aws-access}}
      aws_secret_key: {{dingotiles-aws-secret}}
      backups_bucket: {{backups-testflight-backups-bucket}}
      clusterdata_bucket: {{backups-testflight-clusterdata-bucket}}
      region: {{backups-testflight-s3-region}}
      docker_image_image: dingotiles/dingo-postgresql95
      docker_image_tag: edge
      docker_image_source: upstream
  - put: lite-deployment-testflight
    params:
      manifest: manifest/manifest.yml
      stemcells: [lite-stemcell/*.tgz]
      releases:
        - candidate-release/*.tgz
        - etcd/*.tgz
        - simple-remote-syslog/*.tgz
  - put: sanity-test
    resource: lite-errand-testflight
    params:
      manifest: manifest/manifest.yml
      errand: sanity-test
    on_failure:
      task: show-broker-logs
      file: boshrelease-ci/ci/tasks/show-broker-logs.yml
      params:
        bosh_target: {{bosh-lite-testflight-target}}
        bosh_username: {{bosh-lite-username}}
        bosh_password: {{bosh-lite-password}}

- name: testflight-bosh2
  public: true
  serial_groups: [bosh-lite-testflight-bosh2]
  plan:
  - aggregate:
    - {get: boshrelease-ci}
    - {get: boshrelease, passed: [bosh-rc], trigger: true}
    - {get: version, passed: [bosh-rc], trigger: true}
    - {get: candidate-release, passed: [bosh-rc], trigger: true}
    - {get: pg95-image-edge, params: {skip_download: true}}
    - {get: docker-image-registrator, trigger: true, params: {skip_download: true}}
    - {get: etcd}
    - {get: simple-remote-syslog}
    - {get: lite-stemcell}
  - task: director-creds
    file: boshrelease-ci/ci/tasks/director-creds.yml
    params:
      VAULT_ADDR: {{vault-addr}}
      VAULT_SKIP_VERIFY: 1
      VAULT_PREFIX: {{bosh-lite-testflight-bosh2-vault-prefix}}
      GITHUB_TOKEN: {{github-release-access-token}}
  - task: bosh2-deploy
    file: boshrelease-ci/ci/tasks/bosh2-deploy.yml
    params:
      deployment_name: dingo-postgresql-testflight-bosh2
      deployment_router_static_ip: 10.244.0.20
      router_public_ip: 10.244.0.20
      aws_access_key: {{dingotiles-aws-access}}
      aws_secret_key: {{dingotiles-aws-secret}}
      backups_bucket: {{backups-testflight-backups-bucket}}
      clusterdata_bucket: {{backups-testflight-clusterdata-bucket}}
      region: {{backups-testflight-s3-region}}
      docker_image_image: dingotiles/dingo-postgresql95
      docker_image_tag: edge
      cf_system_domain: {{testflight-bosh2-cf_system_domain}}
      cf_admin_password: {{testflight-bosh2-cf_admin_password}}
      cf_admin_username: {{testflight-bosh2-cf_admin_username}}
      cf_skip_ssl_validation: {{testflight-bosh2-cf_skip_ssl_validation}}
      test_errand: sanity-test

- name: integration
  public: true
  serial_groups: [test-cf-snw, bosh-lite-integration]
  plan:
  - aggregate:
    - do:
      - {get: boshrelease-ci}
      - aggregate:
        - task: delete-testflight
          file: boshrelease-ci/ci/tasks/delete-testflight.yml
          params:
            deployment_name: dingo-postgresql-testflight
            bosh_target: {{bosh-lite-integration-target}}
            bosh_username: {{bosh-lite-username}}
            bosh_password: {{bosh-lite-password}}
        - task: delete-orphaned-disks-testflight
          file: boshrelease-ci/ci/tasks/delete-orphaned-disks-testflight.yml
          params:
            bosh_target: {{bosh-lite-integration-target}}
            bosh_username: {{bosh-lite-username}}
            bosh_password: {{bosh-lite-password}}
    - {get: boshrelease, passed: [testflight]}
    - {get: version, passed: [testflight]}
    - {get: pg95-image-edge, passed: [testflight], trigger: true, params: {skip_download: true}}
    - {get: candidate-release, passed: [testflight], trigger: true}
    - {get: etcd, passed: [testflight]}
    - {get: simple-remote-syslog, passed: [testflight]}
    - {get: docker-image-registrator, passed: [testflight], trigger: true, params: {skip_download: true}}
    - {get: lite-stemcell, passed: [testflight]}
  - task: director-creds
    file: boshrelease-ci/ci/tasks/director-creds.yml
    params:
      VAULT_ADDR: {{vault-addr}}
      VAULT_SKIP_VERIFY: 1
      VAULT_PREFIX: {{bosh-lite-integration-vault-prefix}}
      GITHUB_TOKEN: {{github-release-access-token}}
  - task: create-lite-manifest
    file: boshrelease-ci/ci/tasks/create-manifest-bosh1.yml
    params:
      deployment_name: dingo-postgresql-testflight
      bosh_target: {{bosh-lite-integration-target}}
      bosh_username: {{bosh-lite-username}}
      bosh_password: {{bosh-lite-password}}
      bosh_syslog_host: {{bosh-lite-syslog-host}}
      bosh_syslog_port: {{bosh-lite-syslog-port}}
      aws_access_key: {{dingotiles-aws-access}}
      aws_secret_key: {{dingotiles-aws-secret}}
      backups_bucket: {{backups-testflight-backups-bucket}}
      clusterdata_bucket: {{backups-testflight-clusterdata-bucket}}
      region: {{backups-testflight-s3-region}}
      docker_image_image: "dingotiles/dingo-postgresql95"
      docker_image_tag: "edge"
      docker_image_source: upstream
  - put: lite-deployment-integration
    params:
      manifest: manifest/manifest.yml
      stemcells: [lite-stemcell/*.tgz]
      releases:
        - candidate-release/*.tgz
        - etcd/*.tgz
        - simple-remote-syslog/*.tgz
  - aggregate:
    - task: prepare-disaster-recovery
      file: boshrelease-ci/ci/tasks/prepare-disaster-recovery.yml
      params:
        broker_host: 10.58.111.47
        broker_port: 8888
        router_public_ip: 10.58.111.47
        cf_system_domain: system.test-cf.snw
        cf_admin_username: admin
        cf_admin_password: A8tb4yRlQ3BmKmc1TQSCgiN7rAQXiQ73PkeoyI1qGTHq8y523kPZWjGyedjal6kx
        cf_skip_ssl_validation: true
    - do:
      - put: disaster-recovery
        resource: lite-errand-integration
        params:
          manifest: manifest/manifest.yml
          errand: integration-test
        on_failure:
          task: show-broker-logs
          file: boshrelease-ci/ci/tasks/show-broker-logs.yml
          params:
            bosh_target: {{bosh-lite-integration-target}}
            bosh_username: {{bosh-lite-username}}
            bosh_password: {{bosh-lite-password}}
      - put: disaster-recovery
        resource: lite-errand-integration
        params:
          manifest: manifest/manifest.yml
          errand: disaster-recovery
        on_failure:
          task: show-broker-logs
          file: boshrelease-ci/ci/tasks/show-broker-logs.yml
          params:
            bosh_target: {{bosh-lite-integration-target}}
            bosh_username: {{bosh-lite-username}}
            bosh_password: {{bosh-lite-password}}
  - task: assert-disaster-recovery
    file: boshrelease-ci/ci/tasks/assert-disaster-recovery.yml
    params:
      router_public_ip: 10.58.111.47
      cf_system_domain: system.test-cf.snw
      cf_admin_username: admin
      cf_admin_password: A8tb4yRlQ3BmKmc1TQSCgiN7rAQXiQ73PkeoyI1qGTHq8y523kPZWjGyedjal6kx
      cf_skip_ssl_validation: true
    on_failure:
      task: show-broker-logs
      file: boshrelease-ci/ci/tasks/show-broker-logs.yml
      params:
        bosh_target: {{bosh-lite-integration-target}}
        bosh_username: {{bosh-lite-username}}
        bosh_password: {{bosh-lite-password}}

- name: integration-bosh2
  public: true
  serial_groups: [bosh-lite-integration-bosh2]
  plan:
  - aggregate:
    - {get: boshrelease-ci}
    - {get: boshrelease, passed: [testflight-bosh2]}
    - {get: version, passed: [testflight-bosh2]}
    - {get: pg95-image-edge, passed: [testflight-bosh2], trigger: true, params: {skip_download: true}}
    - {get: candidate-release, passed: [testflight-bosh2], trigger: true}
    # TODO: currently am using etcd2-boshrelease with its links support on .49
    - {get: etcd, passed: [testflight-bosh2]}
    - {get: simple-remote-syslog, passed: [testflight-bosh2]}
    - {get: docker-image-registrator, passed: [testflight-bosh2], trigger: true, params: {skip_download: true}}
    - {get: lite-stemcell, passed: [testflight-bosh2]}
  - task: director-creds
    file: boshrelease-ci/ci/tasks/director-creds.yml
    params:
      VAULT_ADDR: {{vault-addr}}
      VAULT_SKIP_VERIFY: 1
      VAULT_PREFIX: {{bosh-lite-testflight-bosh2-vault-prefix}}
      GITHUB_TOKEN: {{github-release-access-token}}
  - task: bosh2-deploy
    file: boshrelease-ci/ci/tasks/bosh2-deploy.yml
    params:
      deployment_name: dingo-postgresql-integration-bosh2
      delete_deployment_first: true
      deployment_router_static_ip: 10.244.0.21
      router_public_ip: 10.58.111.49
      aws_access_key: {{dingotiles-aws-access}}
      aws_secret_key: {{dingotiles-aws-secret}}
      backups_bucket: {{backups-testflight-backups-bucket}}
      clusterdata_bucket: {{backups-testflight-clusterdata-bucket}}
      region: {{backups-testflight-s3-region}}
      docker_image_image: dingotiles/dingo-postgresql95
      docker_image_tag: edge
      cf_system_domain: {{testflight-bosh2-cf_system_domain}}
      cf_admin_password: {{testflight-bosh2-cf_admin_password}}
      cf_admin_username: {{testflight-bosh2-cf_admin_username}}
      cf_skip_ssl_validation: {{testflight-bosh2-cf_skip_ssl_validation}}
  - aggregate:
    - task: prepare-disaster-recovery
      file: boshrelease-ci/ci/tasks/prepare-disaster-recovery.yml
      params:
        broker_host: 10.58.111.49
        broker_port: 8821
        router_public_ip: 10.58.111.49
        cf_system_domain: {{testflight-bosh2-cf_system_domain}}
        cf_admin_password: {{testflight-bosh2-cf_admin_password}}
        cf_admin_username: {{testflight-bosh2-cf_admin_username}}
        cf_skip_ssl_validation: {{testflight-bosh2-cf_skip_ssl_validation}}
    - do:
      - put: disaster-recovery
        resource: lite-errand-integration-bosh2
        params:
          manifest: manifest/manifest.yml
          errand: integration-test
        # on_failure:
        #   task: show-broker-logs
        #   file: boshrelease-ci/ci/tasks/show-broker-logs.yml
        #   params:
        #     bosh_target: {{bosh-lite-integration-target}}
        #     bosh_username: {{bosh-lite-username}}
        #     bosh_password: {{bosh-lite-password}}
      - put: disaster-recovery
        resource: lite-errand-integration-bosh2
        params:
          manifest: manifest/manifest.yml
          errand: disaster-recovery
        # on_failure:
        #   task: show-broker-logs
        #   file: boshrelease-ci/ci/tasks/show-broker-logs.yml
        #   params:
        #     bosh_target: {{bosh-lite-integration-target}}
        #     bosh_username: {{bosh-lite-username}}
        #     bosh_password: {{bosh-lite-password}}
  - task: assert-disaster-recovery
    file: boshrelease-ci/ci/tasks/assert-disaster-recovery.yml
    params:
      router_public_ip: 10.58.111.49
      cf_system_domain: {{testflight-bosh2-cf_system_domain}}
      cf_admin_password: {{testflight-bosh2-cf_admin_password}}
      cf_admin_username: {{testflight-bosh2-cf_admin_username}}
      cf_skip_ssl_validation: {{testflight-bosh2-cf_skip_ssl_validation}}
    # on_failure:
    #   task: show-broker-logs
    #   file: boshrelease-ci/ci/tasks/show-broker-logs.yml
    #   params:
    #     bosh_target: {{bosh-lite-integration-target}}
    #     bosh_username: {{bosh-lite-username}}
    #     bosh_password: {{bosh-lite-password}}

# - name: bump-image-layers
#   public: true
#   serial: true
#   plan:
#   - aggregate:
#     - {get: boshrelease-ci}
#     - {get: boshrelease, passed: [testflight]}
#     - {get: pg95-image-edge, passed: [testflight], trigger: true, params: {save: true}}
#     - {get: docker-image-registrator, passed: [testflight], trigger: true, params: {save: true}}
#   - task: bump-image-blob
#     file: boshrelease-ci/ci/tasks/bump-image-layers.yml
#     params:
#       aws_access_key_id: {{cfcommunity-aws-access}}
#       aws_secret_access_key: {{cfcommunity-aws-secret}}
#   - aggregate:
#     - put: docker-image-pg95-patroni
#       params:
#         load_base: pg95-image-edge
#         load_file:       pg95-image-edge/image
#         load_repository: dingotiles/dingo-postgresql95
#         load_tag: edge
#     - put: boshrelease
#       params: {repository: boshrelease-images-updated, rebase: true}

- name: deploy-vsphere
  serial: true
  plan:
  - aggregate:
    - {get: boshrelease-ci}
    - {get: boshrelease, passed: [testflight]}
    - {get: version, passed: [testflight]}
    - {get: pg95-image-edge, passed: [testflight], trigger: true, params: {skip_download: true}}
    - {get: candidate-release, passed: [testflight], trigger: true}
    - {get: etcd, passed: [testflight]}
    - {get: simple-remote-syslog, passed: [testflight]}
    - {get: docker-image-registrator, passed: [testflight], trigger: true, params: {skip_download: true}}
    - {get: vsphere-stemcell}
  - task: setup-vsphere-manifest
    file: boshrelease-ci/ci/tasks/setup-vsphere-manifest.yml
    params:
      aws_access_key: {{dingotiles-aws-access}}
      aws_secret_key: {{dingotiles-aws-secret}}
      backups_bucket: {{backups-testflight-backups-bucket}}
      clusterdata_bucket: {{backups-testflight-clusterdata-bucket}}
      region: {{backups-testflight-s3-region}}
      syslog_host: {{bosh-vsphere-syslog-host}}
      syslog_port: {{bosh-vsphere-syslog-port}}
  - put: vsphere-deployment
    params:
      manifest: vsphere-manifest/manifest.yml
      stemcells: [vsphere-stemcell/*.tgz]
      releases:
        - candidate-release/*.tgz
        - etcd/*.tgz
        - simple-remote-syslog/*.tgz
  - put: sanity-test
    resource: vsphere-errand
    params:
      manifest: vsphere-manifest/manifest.yml
      errand: sanity-test

- name: shipit
  serial_groups: [version]
  public: true
  plan:
  - aggregate:
    - {get: boshrelease-ci}
    - {get: boshrelease, passed: [integration, integration-bosh2, deploy-vsphere]}
    - {get: candidate-release, passed: [integration, integration-bosh2, deploy-vsphere]}
    - {get: etcd, passed: [integration, integration-bosh2, deploy-vsphere]}
    - {get: simple-remote-syslog, passed: [integration, integration-bosh2, deploy-vsphere]}
    - {get: version, passed: [integration, integration-bosh2, deploy-vsphere], params: {bump: final}}
  - aggregate:
    # - do:
    #   - {get: pg95-image-edge, passed: [deploy-vsphere], params: {save: true}}
    #   - put: pg95-image-latest
    #     params:
    #       load_base: pg95-image-edge
    #       load_file:       pg95-image-edge/image
    #       load_repository: dingotiles/dingo-postgresql95
    #       load_tag: edge
    #       tag: version/number
    #       tag_as_latest: true

    - do:
      - task: create-final-release
        file: boshrelease-ci/ci/tasks/finalize-release.yml
        params:
          aws_access_key_id: {{cfcommunity-aws-access}}
          aws_secret_access_key: {{cfcommunity-aws-secret}}
      - put: boshrelease
        params:
          repository: final-release-repo
          rebase: true
      - task: license-finder-report
        file: boshrelease-ci/ci/tasks/license-finder-report.yml
      - task: create-release-notes
        file: boshrelease-ci/ci/tasks/create-release-notes.yml
      - put: version
        params: {file: version/number}
      - task: generate-commitish
        config:
          platform: linux
          image: docker:///dingotiles/dingo-postgresql-release-pipeline
          inputs: [{name: boshrelease}]
          outputs: [{name: generated-commitish}]
          run:
            path: sh
            args:
            - -c
            - |
              git -C boshrelease rev-parse HEAD > generated-commitish/commitish
      - task: rename-dependency-releases
        file: boshrelease-ci/ci/tasks/rename-dependency-releases.yml
      - put: github-release
        params:
          name: release-notes/release-name
          tag: release-notes/release-name
          body: release-notes/notes.md
          commitish: generated-commitish/commitish
          globs:
          - final-release-tarball/*.tgz
          - dependency-releases/*.tgz
          - license-finder-reports/dingo-postgresql-release-license-report-*.csv

- name: shipit-rc
  serial_groups: [version]
  public: true
  plan:
  - aggregate:
    - {get: boshrelease-ci}
    - {get: boshrelease, passed: [integration, integration-bosh2, deploy-vsphere]}
    - {get: candidate-release, passed: [integration, integration-bosh2, deploy-vsphere]}
    - {get: etcd, passed: [integration, integration-bosh2, deploy-vsphere]}
    - {get: simple-remote-syslog, passed: [integration, integration-bosh2, deploy-vsphere]}
    - {get: version, passed: [integration, integration-bosh2, deploy-vsphere]}
  - aggregate:
    # - do:
    #   - {get: pg95-image-edge, passed: [deploy-vsphere], params: {save: true}}
    #   - put: pg95-image-latest
    #     params:
    #       load_base: pg95-image-edge
    #       load_file:       pg95-image-edge/image
    #       load_repository: dingotiles/dingo-postgresql95
    #       load_tag: edge
    #       tag: version/number
    #       tag_as_latest: true

    - do:
      - task: create-final-release
        file: boshrelease-ci/ci/tasks/finalize-release.yml
        params:
          aws_access_key_id: {{cfcommunity-aws-access}}
          aws_secret_access_key: {{cfcommunity-aws-secret}}
      - put: boshrelease
        params:
          repository: final-release-repo
          rebase: true
      - task: create-release-notes
        file: boshrelease-ci/ci/tasks/create-release-notes.yml
      - put: version
        params: {file: version/number}
      - task: generate-commitish
        config:
          platform: linux
          image: docker:///dingotiles/dingo-postgresql-release-pipeline
          inputs: [{name: boshrelease}]
          outputs: [{name: generated-commitish}]
          run:
            path: sh
            args:
            - -c
            - |
              git -C boshrelease rev-parse HEAD > generated-commitish/commitish
      - task: rename-dependency-releases
        file: boshrelease-ci/ci/tasks/rename-dependency-releases.yml
      - put: github-release
        params:
          name: release-notes/release-name
          tag: release-notes/release-name
          body: release-notes/notes.md
          commitish: generated-commitish/commitish
          globs:
          - final-release-tarball/*.tgz
          - dependency-releases/*.tgz

- name: major
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major, pre: rc}
  - put: version
    params: {file: version/number}

- name: minor
  public: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor, pre: rc}
  - put: version
    params: {file: version/number}

- name: patch
  public: true
  serial_groups: [version]
  plan:
  - get: version
    passed: [shipit]
    trigger: true
    params: {bump: patch, pre: rc}
  - put: version
    params: {file: version/number}

- name: build-task-image
  serial: true
  plan:
  - aggregate:
    - {get: boshrelease-ci-task, trigger: true}
  - put: docker-image-ci
    params:
      build: boshrelease-ci-task/ci/ci_image

- name: docker-machine-setup
  serial: true
  serial_groups: [delmo]
  plan:
  - get: boshrelease-ci
  - task: docker-machine-setup
    file: boshrelease-ci/ci/tasks/docker-machine-setup.yml
    params:
      AWS_ACCESS_KEY_ID: {{docker-machine-access-key-id}}
      AWS_SECRET_ACCESS_KEY: {{docker-machine-secret-access-key}}
      AWS_DEFAULT_REGION: {{docker-machine-region}}
      AWS_VPC_ID: {{docker-machine-vpc-id}}
      AWS_SUBNET_ID: {{docker-machine-subnet-id}}
      AWS_ZONE: {{docker-machine-az-zone}}
      AWS_BUCKET: {{docker-machine-bucket}}
      AWS_SECURITY_GROUP: {{docker-machine-security-group}}
      AWS_AMI: ami-fd6e3bea

resources:
- name: boshrelease
  type: git
  source:
    uri: git@github.com:dingotiles/dingo-postgresql-release.git
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}

- name: github-release
  type: github-release
  source:
    access_token: {{github-release-access-token}}
    user: dingotiles
    repository: dingo-postgresql-release
    drafts: true

- name: boshrelease-trigger
  type: git
  source:
    uri: git@github.com:dingotiles/dingo-postgresql-release.git
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}
    paths: [packages/*, jobs/*, jobs/**/*, templates/*, src/*]

- name: boshrelease-ci
  type: git
  source:
    uri: git@github.com:dingotiles/dingo-postgresql-release.git
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}

- name: boshrelease-ci-task
  type: git
  source:
    uri: git@github.com:dingotiles/dingo-postgresql-release.git
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}
    paths: [ci/ci_image/*]

- name: boshrelease-pg95-image
  type: git
  source:
    uri: git@github.com:dingotiles/dingo-postgresql-release.git
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}
    paths: [images/postgresql95-patroni]

- name: boshrelease-pg95-base-image
  type: git
  source:
    uri: git@github.com:dingotiles/dingo-postgresql-release.git
    branch: {{pipeline-branch}}
    private_key: {{github-private-key}}
    paths: [images/postgresql95-patroni-base]

- name: version
  type: semver
  source:
    driver: git
    initial_version: 0.0.1
    uri: git@github.com:dingotiles/dingo-postgresql-release.git
    branch: version
    file: version
    private_key: {{github-private-key}}

- name: candidate-release
  type: s3
  source:
    bucket: dingo-postgresql-release-candidates
    regexp: dingo-postgresql-(.*).tgz
    access_key_id: {{dingotiles-aws-access}}
    secret_access_key: {{dingotiles-aws-secret}}
    region_name: {{dingotiles-aws-region}}

- name: patroni
  type: git
  source:
    uri: https://github.com/zalando/patroni.git
    branch: v0.90
    private_key: {{github-private-key}}

- name: pg95-base-image-latest
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: dingotiles/dingo-postgresql95-base
    tag: "latest"

- name: pg95-image-edge
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: dingotiles/dingo-postgresql95
    tag: "edge"

- name: pg95-image-pre-test
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: dingotiles/dingo-postgresql95
    tag: "pre-test"

- name: docker-image-registrator
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: cfcommunity/registrator
    tag: "latest"

- name: docker-image-ci
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: dingotiles/dingo-postgresql-release-pipeline

- name: lite-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent

- name: lite-deployment-testflight
  type: bosh-deployment
  source: &lite-testflight-defaults
    target: {{bosh-lite-testflight-target}}
    username: {{bosh-lite-username}}
    password: {{bosh-lite-password}}
    deployment: dingo-postgresql-testflight

- name: lite-deployment-integration
  type: bosh-deployment
  source: &lite-integration-defaults
    target: {{bosh-lite-integration-target}}
    username: {{bosh-lite-username}}
    password: {{bosh-lite-password}}
    deployment: dingo-postgresql-testflight

- name: lite-errand-testflight
  type: bosh-errand
  source: *lite-testflight-defaults

- name: lite-errand-integration
  type: bosh-errand
  source: *lite-integration-defaults

- name: lite-errand-integration-bosh2
  type: bosh-errand
  source:
    target: 10.58.111.49
    username: admin
    password: admin
    deployment: dingo-postgresql-integration-bosh2

- name: vsphere-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-vsphere-esxi-ubuntu-trusty-go_agent

- name: vsphere-deployment
  type: bosh-deployment
  source: &vsphere-defaults
    target: {{bosh-vsphere-target}}
    username: {{bosh-vsphere-username}}
    password: {{bosh-vsphere-password}}
    deployment: dingo-postgresql-vsphere

- name: vsphere-errand
  type: bosh-errand
  source: *vsphere-defaults

- name: etcd
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/etcd-release

- name: simple-remote-syslog
  type: bosh-io-release
  source:
    repository: cloudfoundry-community/simple-remote-syslog-boshrelease

resource_types:
- name: bosh-errand
  type: docker-image
  source:
    repository: starkandwayne/bosh-errand-resource
