#!/usr/bin/env bash

# job template binding variables

# job name & index of this VM within cluster
# e.g. JOB_NAME=redis, JOB_INDEX=0
export NAME='<%= name %>'
export JOB_INDEX=<%= index %>
# full job name, like redis/0 or webapp/3
export JOB_FULL="$NAME/$JOB_INDEX"

# User which will own the Docker services
export DOCKER_USER="<%= p('docker.user') %>"

# Group which will own the Docker services
export DOCKER_GROUP="<%= p('docker.group') %>"

<%
  etcd_machine = nil
  if_p("etcd.machines") do |machines|
    etcd_machine = machines.first
  end
  etcd_machine ||= link("etcd").instances.first.address
-%>
export REGISTRATOR_BACKEND_URI="etcd://<%= etcd_machine %>:4001"

<%
  require 'json'

  def discover_external_ip
    networks = spec.networks.marshal_dump
    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end
    if !network
      _, network = networks.first
    end
    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end
    network.ip
  end
-%>
# export DNS_DOMAIN_NAME=<%= (spec.dns_domain_name.nil? || spec.dns_domain_name == "") ? "bosh" : spec.dns_domain_name %>
# export DOCKER_HOSTNAME="<%= index %>.<%= name %>.<%= spec.networks.methods(false).grep(/[^=]$/).first.to_s %>.<%= spec.deployment %>.$DNS_DOMAIN_NAME"
export DOCKER_HOSTNAME="<%= discover_external_ip %>"
export DOCKER_HOSTIP="<%= discover_external_ip %>"
